name: criar hello world
on:
  issues:
    types: [opened, reopened]

jobs:
  issue-to-json:
    name: Convert issue body to json
    if: contains(github.event.issue.body, '>>prompt<<')
    runs-on: ubuntu-latest
    outputs:
      payload-parsed: ${{ steps.payload.outputs.json_var }}
    steps:
      - name: Run parser
        id: parse
        uses: peter-murray/issue-forms-body-parser@v2.0.0
        with:
          issue_id: ${{ github.event.issue.number }}
          separator: '###'
          label_marker_start: '>>'
          label_marker_end: '<<'
      - name: Set Output
        id: payload
        run: echo json_var='${{ steps.parse.outputs.payload }}' >> $GITHUB_OUTPUT

  execute-pipe:
    name: criar hello world
    if: contains(github.event.issue.body, '>>prompt<<')
    runs-on: ubuntu-latest
    needs: issue-to-json
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
     
      - name: build prompt
        id: run
        continue-on-error: true
        env:
          prompt: ${{ fromJson(needs.issue-to-json.outputs.payload-parsed)['prompt'] }}
        run: bash ./gemini.sh "${prompt}" "${{ secrets.GEMINI_API_KEY }}" > ./generated.txt

      - name: preload file
        uses: juliangruber/read-file-action@v1
        if: steps.run.outcome == 'success'
        id: read-file
        with:
          path: "./generated.txt"

      - name:
        uses: actions/github-script@v7
        if: steps.read-file.outcome == 'success'
        id: add-comment
        with:
          result-encoding: string
          script: |
            const content = ${{ steps.read-file.outputs.content }}
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              body: 'content'
            })

      # - name: "Commit changes"
      #   uses: EndBug/add-and-commit@v9
      #   if: steps.run.outcome == 'success'
      #   with:
      #     message: new code
      #     committer_name: GitHub Actions
      #     committer_email: actions@github.com

      - name: 'Close issue: prompt showed!'
        uses: peter-evans/close-issue@v2
        if: steps.add-comment.outcome == 'success'
        with:
          comment: |
            Closing issue with success run
            Reason: prompt ok
          labels: |
            prompt_showed
  